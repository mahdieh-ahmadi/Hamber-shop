{"version":3,"sources":["component/toolbar/burger-logo.png","hoc/hoc.js","component/toolbar/logo/logo.js","component/toolbar/navigation/navigation.js","component/toolbar/menu/bergericon.js","component/toolbar/menu/nav/nav.js","component/toolbar/toolbar.js","component/index/index.js","component/berger/bergerindex/bergerindex.js","component/berger/buildcontrol/controldetails/controldetails.js","component/berger/buildcontrol/buildcontrol.js","component/berger/bergerindex/factor/factoritems/factoritems.js","component/berger/bergerindex/factor/button/button.js","component/berger/bergerindex/factor/factoe.js","component/backdrop/backdrop.js","hoc/spinner/spinner.js","hoc/axios/axios.js","component/berger/berger.js","store/actions/begerActions.js","store/actions/actions.js","hoc/form/form.js","component/continueFactor/dataForm/dataForm.js","component/continueFactor/continueFactor.js","component/order/orders/orders.js","component/order/order.js","store/actions/orderactions.js","component/auth/auth.js","store/actions/authAction.js","component/auth/logout/logout.js","containers/App.js","serviceWorker.js","store/reducer/bergerReducer.js","store/reducer/orderReducer.js","store/reducer/authReducer.js","index.js"],"names":["module","exports","Hoc","props","children","logo","className","src","image","alt","Nav","ingrideient","history","push","ordersShow","this","token","select","to","exact","change","Component","connect","state","auth","idtoken","err","withRouter","bergericon","bergerclass","onClick","shownav","nav","navbarr","clicked","toolbar","show","navhandler","setState","classes","join","Index","Bergureindex","bergureclass","type","controldetail","addhandler","removehandler","disabled","disablehandler","Builddetails","control","label","bergerindex","map","logkey","key","addhendler","removedisable","disable","factoritems","meat","chees","salad","bacon","btn","class","fnc","value","factor","hidefactore","fee","cancle","continue","backdrop","hideback","Spinner","intence","axios","create","baseURL","Berger","hide","hidebackdrop","continuehandler","console","log","queryParams","i","berger","encodeURIComponent","totalFee","querySrting","pathname","search","onInitIngredients","disableinfo","ing","classhide","factorhide","main","structure","Object","keys","Array","_","reduce","arr","el","concat","length","bakon","AddIngrediwnt","RemoveIngredient","ingredient","dispatch","det","name","get","then","response","data","catch","form","input","config","onChange","chaned","inputtype","option","p","dataList","customer","typeconfig","placeholder","country","city","email","sreet","canclefactor","continueOrder","event","preventDefault","customerdata","order","totalfee","userid","intens","post","changedHandler","id","handlerValue","target","item","action","localID","ContinueFactor","continueFactor","match","path","render","orders","Order","setOrder","process","Math","random","userId","url","actionsType","Authform","password","continueAuth","AuthSignUp","jump","error","style","color","proces","signup","returnSecureToken","expiresIn","idToken","localId","authSeccess","errore","actions","Logout","logout","App","component","Bergur","ContaainerFactor","Auth","PureComponent","Boolean","window","location","hostname","initialState","Fee","bergerReducer","orderReducer","initialstate","reducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a646ae4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Hoc = (props) => props.children\r\n\r\nexport default Hoc","import React from 'react'\r\nimport image from '../burger-logo.png'\r\nimport './logo.css'\r\n\r\nconst logo = () => (\r\n    <div className='logo'>\r\n        <img src={image} alt='my berger'/>\r\n    </div>\r\n    \r\n)\r\n\r\n\r\nexport default logo","import React,{Component} from 'react'\r\nimport './nav.css'\r\nimport {withRouter,NavLink} from 'react-router-dom'\r\n\r\nimport {connect} from 'react-redux' \r\n\r\nclass Nav extends Component{\r\n    ingrideient= () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    ordersShow = () => {\r\n        this.props.history.push('/orders')\r\n    }\r\n\r\n    render(){\r\n        if(this.props.token !== null && !this.props.select){\r\n            \r\n        }\r\n        return(\r\n            <div className='nav'>\r\n                <NavLink to='/' exact>Ingridient</NavLink>\r\n                { this.props.token && !this.props.change ?\r\n                <NavLink to='/orders' exact>Orders</NavLink>: null}\r\n               { this.props.token && !this.props.change ? \r\n               <NavLink to='/logout' exact>logout</NavLink> : \r\n               <NavLink to='/auth' exact>Authintication</NavLink>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        token : state.auth.idtoken,\r\n        change : state.auth.select,\r\n        select : state.auth.select,\r\n        err:state.auth.err\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Nav))","import React from 'react'\r\nimport './bergericon.css'\r\n \r\nconst bergericon = (props) => (\r\n    <div className={props.bergerclass} onClick={props.shownav}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default bergericon","import React from 'react'\r\nimport Logo from '../../logo/logo'\r\nimport Button from '../../navigation/navigation'\r\nimport './nav.css'\r\n\r\nconst nav = (props) => (\r\n    <div className={props.navbarr} onClick={props.clicked}>\r\n        <Logo/>\r\n        <Button />\r\n    </div>\r\n)\r\n\r\nexport default nav","import React,{Component} from 'react'\r\nimport './toolbar.css'\r\nimport Logo from './logo/logo'\r\nimport Nav from './navigation/navigation'\r\nimport Bergericon from './menu/bergericon'\r\nimport Hoc from '../../hoc/hoc'\r\nimport Navbar from './menu/nav/nav'\r\n\r\nclass toolbar extends Component{\r\n    state = {\r\n        show:false\r\n    }\r\n\r\n    navhandler = () => {\r\n        this.setState({show:!this.state.show})\r\n    }\r\n\r\n    render() {\r\n        let classes = ['navbar','hidden'].join(' ')\r\n        if(this.state.show){\r\n            classes='navbar'\r\n        }\r\n   \r\n    return(\r\n        <Hoc>\r\n            <Navbar navbarr={classes} clicked={this.navhandler}/>\r\n            <div className='toolbar'>\r\n                <section className='iconberger'>\r\n                    <Bergericon shownav={this.navhandler} bergerclass={'bergericon'}/>\r\n                </section>\r\n                \r\n                <Logo/>\r\n                <section className='navbutton'>\r\n                    <Nav/>\r\n                </section>\r\n                \r\n            </div>\r\n        </Hoc>\r\n        \r\n    )}\r\n}\r\n\r\nexport default toolbar","import React from 'react'\r\nimport Hoc from '../../hoc/hoc'\r\nimport './index.css'\r\nimport Toolbar from '../toolbar/toolbar'\r\n\r\nconst Index = (props) => {\r\n    return(\r\n        <Hoc>\r\n            \r\n            <Toolbar/>\r\n            <main className='container'>\r\n                {props.children}\r\n            </main>\r\n        </Hoc>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport './bergerindex.css'\r\n\r\nconst Bergureindex = (props) => {\r\n    let bergureclass = null;\r\n\r\n    switch(props.type){\r\n        case('bread-bottom'):\r\n            bergureclass = <div className='bread-bottom'></div>\r\n        break\r\n        case('bread-top'):\r\n            bergureclass = (<div className='bread-top'>\r\n                <div className='slicce1'></div>\r\n                <div className='slicce2'></div>\r\n            </div>)\r\n        break\r\n        case('meat'):\r\n            bergureclass=<div className='meat'></div>;\r\n        break\r\n        case('chees'):\r\n            bergureclass=<div className='chees'></div>;\r\n        break\r\n        case('salad'):\r\n            bergureclass=<div className='salad'></div>;\r\n        break\r\n        case('bakon'):\r\n            bergureclass=<div className='bakon'></div>;\r\n        break\r\n        default:\r\n             bergureclass = null;\r\n    }\r\n    return (bergureclass)\r\n}\r\n\r\nexport default Bergureindex;","import React from 'react'\r\nimport './controldetails.css'\r\n\r\nconst controldetail = (props) => {\r\n    return (\r\n        <li>\r\n            <p>{props.children}</p>\r\n            <button onClick={props.addhandler}>Add</button>\r\n            <button onClick={props.removehandler} disabled={props.disablehandler}>Remove</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default controldetail;","import React ,{Component}  from 'react'\r\nimport Detail from './controldetails/controldetails'\r\nimport './buildcontrol.css'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {  withRouter} from 'react-router-dom'\r\n\r\n\r\nclass Builddetails extends Component  {\r\n    state = {\r\n        control : [\r\n            {label : 'bakon' , type : 'bakon'} ,\r\n            {label : 'salad' , type : 'salad'} ,\r\n            {label : 'chees' , type : 'chees'} ,\r\n            {label : 'meat' , type : 'meat'} \r\n         ]\r\n    }\r\n\r\n    auth = () => {\r\n        this.props.history.push('/auth')\r\n    }\r\n\r\n    render(){\r\n        const bergerindex = this.state.control.map(logkey => {\r\n            return( <Detail key={logkey.label} \r\n                         addhandler={() => this.props.addhendler(logkey.label)} \r\n                         removehandler={() => this.props.removehandler(logkey.label)}\r\n                         disablehandler={ this.props.removedisable[logkey.label]}>\r\n                         {logkey.label}\r\n                     </Detail>)\r\n         })\r\n \r\n         return(\r\n             <div className='list'>\r\n                 <ul>\r\n                 {bergerindex}\r\n                 </ul>\r\n                 {this.props.token !== null && !this.props.select ?\r\n                 <button className='sale' \r\n                     disabled={this.props.disable} \r\n                     onClick={this.props.clicked}>Order now!</button> :\r\n                 <button className='sale' \r\n                     disabled={this.props.disable} \r\n                     onClick={this.auth}>Please signin!</button>}\r\n                 \r\n             </div>\r\n             \r\n         )\r\n    }\r\n       \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        select : state.auth.select,\r\n        token : state.auth.idtoken\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Builddetails))","import React from 'react'\r\nimport Hoc from '../../../../../hoc/hoc'\r\n\r\nconst factoritems = (props) => {\r\n    return(\r\n        <Hoc>\r\n            <li>meat : {props.meat}</li>\r\n            <li>chees : {props.chees} </li>\r\n            <li>salad : {props.salad} </li>\r\n            <li>bacon  :{props.bacon} </li>\r\n        </Hoc>\r\n    )\r\n} \r\n\r\nexport default factoritems","import React from 'react'\r\nimport './button.css'\r\n\r\nconst btn = (props) => {\r\n    return(\r\n            <button className={props.class} onClick={props.fnc}>{props.value}</button>\r\n    )\r\n}\r\n\r\nexport default btn","import React from 'react'\r\nimport './factor.css'\r\nimport Factordetail from './factoritems/factoritems'\r\nimport Btn from './button/button'\r\n\r\nconst factor = (props) => {\r\n    return(\r\n        <div className={props.hidefactore}>\r\n            <h2>Your Order</h2>\r\n    <p><strong>total fee is : {props.fee}</strong></p>\r\n            <p>Adelicios burger with the following ingredient:</p>\r\n            <ul>\r\n                <Factordetail\r\n                meat={props.meat}\r\n                chees={props.chees}\r\n                salad={props.salad}\r\n                bacon={props.bacon}/>\r\n            </ul>\r\n            <p>continue to checkout?</p>\r\n        <div className='btns'>\r\n            <Btn \r\n                fnc={props.cancle} \r\n                class='cancleBtn'\r\n                value='cancle' />\r\n            <Btn \r\n                fnc={props.continue} \r\n                class='continueBtn'\r\n                value='continue' />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default factor","import React from 'react'\r\nimport './backdrop.css'\r\n\r\nconst backdrop = (props) => {\r\nreturn (\r\n    <div className={props.classes} onClick={props.hideback}>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default backdrop;","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"loader\">Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import axios from 'axios'\r\n\r\nconst intence = axios.create({\r\n    baseURL:'https://my-berger-3af2b.firebaseio.com/'\r\n})\r\n\r\nexport default intence","import React, { Component } from 'react'\r\nimport Hoc from '../../hoc/hoc'\r\nimport './Berger.css'\r\nimport Burgerindex from './bergerindex/bergerindex'\r\nimport Build from './buildcontrol/buildcontrol'\r\nimport Factor from './bergerindex/factor/factoe'\r\nimport Backdrop from '../backdrop/backdrop'\r\nimport Spinner from '../../hoc/spinner/spinner'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {connect} from 'react-redux'\r\nimport * as actionsType from '../../store/actions/begerActions'\r\n\r\nclass Berger extends Component{\r\n\r\n    state={\r\n        hide : true\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.onInitIngredients();\r\n    }\r\n    \r\n    hidebackdrop = () => {\r\n        this.setState({hide:!this.state.hide})\r\n    }\r\n\r\n    continuehandler = () => {\r\n        console.log(this.props)\r\n        this.setState({hide:!this.state.hide})\r\n        const queryParams=[];\r\n        for(let i in this.state.berger){\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.berger[i]));\r\n        }\r\n        queryParams.push(`totalfee=${this.props.totalFee}`)\r\n        const querySrting = queryParams.join('&')\r\n        this.props.history.push({\r\n            pathname:'/factore',\r\n        search:'?'+querySrting})\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const disableinfo = {...this.props.ing};\r\n        for(let key in disableinfo){\r\n            disableinfo[key] = disableinfo[key] <= 0;\r\n        }\r\n\r\n        let classhide ='back'\r\n        let factorhide ='factor'\r\n        if(this.state.hide){\r\n            classhide=['back' , 'hide'].join(' ')\r\n            factorhide = ['factor' , 'hide'].join(' ')\r\n        }\r\n        let main =<Spinner/> \r\n        if (this.props.ing !== null){\r\n            const structure = Object.keys(this.props.ing).map( logkey => {\r\n                return([...Array(this.props.ing[logkey])].map((_,i) => {\r\n                    return(<Burgerindex type={logkey} key={logkey+i}/>)\r\n                }))\r\n            }).reduce((arr,el) => arr.concat(el))\r\n    \r\n            let classes = null;\r\n            let disable = true;\r\n            if (structure.length !== 0){\r\n               disable = false;\r\n                classes = 'disable';\r\n            }\r\n            main=(<Hoc>\r\n                <Factor\r\n                hidefactore={factorhide}\r\n                meat={this.props.ing.meat}\r\n                chees={this.props.ing.chees}\r\n                salad={this.props.ing.salad}\r\n                bacon={this.props.ing.bakon}\r\n                cancle={this.hidebackdrop}\r\n                continue={this.continuehandler}\r\n                fee={this.props.totalFee}/>\r\n                <div className='burger'>\r\n                <Burgerindex type={'bread-top'}/>\r\n                {structure}\r\n                <p className={[classes, 'masage'].join(' ')}>Pleas select food!</p>\r\n                <Burgerindex type={'bread-bottom'}/>    \r\n                <p className={'masage'}>{this.props.totalFee}</p>\r\n                </div>\r\n                \r\n                <Build addhendler={this.props.AddIngrediwnt} \r\n                removehandler={this.props.RemoveIngredient}\r\n                disable={disable}\r\n                removedisable={disableinfo}\r\n                clicked={this.hidebackdrop}/>\r\n            </Hoc>)\r\n        }\r\n\r\n        return(\r\n            <Hoc>\r\n            <Backdrop \r\n            hideback={this.hidebackdrop}\r\n            classes = {classhide}/>\r\n            \r\n            {main}\r\n            </Hoc>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ing : state.berger.ingredient,\r\n        totalFee : state.berger.fee\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        AddIngrediwnt : (det) => dispatch (actionsType.addHanler(det)),\r\n        RemoveIngredient : (det) => dispatch (actionsType.removeHanler(det)),\r\n        onInitIngredients: () => dispatch(actionsType.initIngredients()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(Berger)) ;","import * as actions from './actions'\r\nimport axios from '../../hoc/axios/axios'\r\n\r\nexport const addHanler = (name) => {\r\n    return{\r\n        type:actions.ADD_HANDLER,\r\n        name : name\r\n    }\r\n}\r\n\r\nexport const removeHanler = (name) => {\r\n    return{\r\n        type:actions.REMOVE_HANDLER,\r\n        name : name\r\n    }\r\n}\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actions.initialberger_done,\r\n        ingredient: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.initialberger_fail\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get( '/startberger.json' )\r\n            .then( response => {\r\n               dispatch(setIngredients(response.data));\r\n            } )\r\n            .catch( () => {\r\n                dispatch(fetchIngredientsFailed());\r\n            } );\r\n    };\r\n};","export const ADD_HANDLER = 'ADD_HANDLER';\r\nexport const REMOVE_HANDLER = 'REMOVE_HANDLER';\r\n\r\nexport const initialberger_start = 'initialberger_start';\r\nexport const initialberger_done = 'initialberger_done';\r\nexport const initialberger_fail = 'initialberger_fail';\r\n\r\nexport const load_initialBerger = 'load_initialBerger'\r\nexport const load_start = 'load_start';\r\nexport const load_done = 'load_done';\r\nexport const load_faild = 'load_faild';\r\n\r\nexport const Auth_start = 'Auth_start';\r\nexport const Auth_succes = 'Auth_succes';\r\nexport const Auth_fail = 'Auth_fail';\r\nexport const Change_action = 'Change_action';\r\n\r\nexport const Logout = 'Logout'","import React from 'react'\r\n\r\nconst form = (props) => {\r\n    let input = <input {...props.config} onChange={props.chaned}/>\r\n   \r\n    switch(props.inputtype){\r\n        case('input'):\r\n        input = <input {...props.config} onChange={props.chaned}/>;\r\n        break;\r\n        case('txtarea'):\r\n        input = <textarea {...props.config} onChange={props.chaned}/>;\r\n        break;\r\n        case('select'):\r\n        input=<select onChange={props.chaned}>\r\n           {props.config.option.map(p => {return(\r\n               <option key={p}> {p} </option>\r\n           )}  \r\n           )}\r\n        </select>;\r\n        break;\r\n        default:\r\n        input = <input {...props.config} onChange={props.chaned}/>\r\n    }\r\n    return(\r\n        <div>\r\n            {input}\r\n        </div>)\r\n}\r\n\r\nexport default form","import React,{Component} from 'react'\r\nimport Btn from '../../berger/bergerindex/factor/button/button'\r\nimport './dataform.css'\r\nimport intens from '../../../hoc/axios/axios'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Input from '../../../hoc/form/form'\r\nimport {connect} from 'react-redux'\r\n\r\nclass dataList extends Component{\r\n   state={\r\n        customer:{\r\n            name:{\r\n                typeconfig:{\r\n                    type:'text',\r\n                    name:'name',\r\n                    placeholder:'Name',\r\n                    value:''\r\n                },\r\n                inputtype:'input',\r\n            } ,\r\n            country:{\r\n                typeconfig:{\r\n                    type:'text',\r\n                    name:'contry',\r\n                    placeholder:'your contry',\r\n                    value:''\r\n                },\r\n                inputtype:'input',\r\n            },\r\n            city:{\r\n                typeconfig:{\r\n                    type:'text',\r\n                    name:'city',\r\n                    placeholder:'your city',\r\n                    value:''\r\n                },\r\n                inputtype:'input',\r\n            },\r\n            email:{\r\n                typeconfig:{\r\n                    type:'email',\r\n                    name:'email',\r\n                    placeholder:'your E-mail',\r\n                    value:''\r\n                },\r\n                inputtype:'input',\r\n            },\r\n            sreet:{\r\n                typeconfig:{\r\n                    type:'text',\r\n                    name:'street',\r\n                    placeholder:'street',\r\n                    value:''\r\n                },\r\n                inputtype:'input',\r\n            },\r\n            type:{\r\n                typeconfig:{\r\n                    name:'type',\r\n                    option:['fastest','cheepest'],\r\n                    value:'fastest'\r\n                },\r\n                inputtype:'select',\r\n            }\r\n        }\r\n        \r\n        }\r\n   \r\n\r\n   componentDidMount(){\r\n       this.setState({berger:this.props.berger , totalfee:this.props.totalfee});\r\n   }\r\n\r\n   canclefactor = () => {\r\n    this.props.history.push('/')\r\n}\r\n\r\ncontinueOrder = (event) => {\r\n    event.preventDefault()\r\n    const customerdata = {}\r\n    for(let i in this.state.customer){\r\n        customerdata[i]=this.state.customer[i].typeconfig.value\r\n    }\r\n    const data = {\r\n         order:this.state.berger,\r\n         fee : this.state.totalfee,\r\n         customer: customerdata,\r\n        userid:this.props.userid}\r\n     intens.post('/order.json',data) \r\n\r\n     this.props.history.push('/') \r\n }\r\n\r\n changedHandler=(event , id) => {\r\n    const handlerValue = {...this.state.customer}\r\n    const changedHandler = {...handlerValue[id]};\r\n    changedHandler.typeconfig.value = event.target.value;\r\n    handlerValue[id] = changedHandler;\r\n    this.setState({customer:handlerValue})\r\n }\r\n\r\n    render(){\r\n        const form = []\r\n         for(let item in this.state.customer){\r\n            form.push( {\r\n                id:item,\r\n                config : this.state.customer[item],\r\n            })\r\n        }\r\n        \r\n        return(\r\n            <div className='dataform'>\r\n                <h4>Pleas insert your data!</h4>\r\n                <form action='false' className='dataform'>\r\n                   {\r\n                    form.map(p => {\r\n                       \r\n                        return(\r\n                            <Input \r\n                            key={p.id} \r\n                            inputtype={p.config.inputtype} \r\n                            config={p.config.typeconfig}\r\n                            chaned={(event) => this.changedHandler(event , p.id)}/>\r\n                        )\r\n                    })}\r\n                    \r\n                        <div className='btns'>\r\n                        <Btn \r\n                            fnc={this.canclefactor} \r\n                            class='cancleBtn'\r\n                            value='cancle' />\r\n                        <Btn \r\n                            fnc={this.continueOrder} \r\n                            class='continueBtn'\r\n                            value='continue' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        userid: state.auth.localID\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(dataList) )","import React,{Component} from 'react'\r\nimport Burgerindex from '../berger/bergerindex/bergerindex'\r\nimport './continuefactore.css'\r\nimport Btn from '../berger/bergerindex/factor/button/button'\r\nimport {withRouter, Route} from 'react-router-dom'\r\n\r\nimport Dataform from './dataForm/dataForm'\r\nimport {connect} from 'react-redux'\r\n\r\nclass ContinueFactor extends Component {\r\n\r\n    canclefactor = () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    continueFactor = () => {\r\n        this.props.history.push(this.props.match.path + '/data')\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        let structure = <h1>h</h1>\r\n        if(this.props.ing !== null ){\r\n            structure = Object.keys(this.props.ing).map( logkey => {\r\n                return([...Array(this.props.ing[logkey])].map((_,i) => {\r\n                    return(<Burgerindex type={logkey} key={logkey+i}/>)\r\n                }))\r\n            }).reduce((arr,el) => arr.concat(el))\r\n        }\r\n       \r\n\r\n        return(\r\n            <div className='continuefactore'>\r\n                <Burgerindex type={'bread-top'}/>\r\n                {structure}\r\n                <Burgerindex type={'bread-bottom'}/>\r\n                <section className='factorBtn'>\r\n\r\n                <div className='btns'>\r\n                <Btn \r\n                    fnc={this.canclefactor} \r\n                    class='cancleBtn'\r\n                    value='cancle' />\r\n                <Btn \r\n                    fnc={this.continueFactor} \r\n                    class='continueBtn'\r\n                    value='continue' />\r\n                </div>\r\n\r\n                </section>\r\n                <Route path='/factore/data' render = { () => \r\n                <Dataform \r\n                canclefactor={this.canclefactor} \r\n                continueOrder={this.ContinueFactor} \r\n                berger={this.props.ing}\r\n                totalfee={this.props.totalFee}/> }/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ing : state.berger.ingredient,\r\n        totalFee : state.berger.fee\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(ContinueFactor));","import React from 'react'\r\nimport './orders.css'\r\n\r\nconst orders = (props) => {\r\n    return(\r\n        <div className='orders'>\r\n            <p>ingredient:</p>\r\n            <ul className='orders-item'>\r\n                <li>Bacon ({props.bacon})</li>\r\n                <li>Chees ({props.chees})</li>\r\n                <li>Meat ({props.meat})</li>\r\n                <li>Salad ({props.salad})</li>\r\n            </ul>\r\n            <p>price: <strong>USD {props.fee}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default orders","import React,{Component} from 'react'\r\nimport Orders from './orders/orders'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../hoc/spinner/spinner'\r\nimport * as actionsType from '../../store/actions/orderactions'\r\n\r\nclass Order extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.setOrder(this.props.token , this.props.userid)\r\n    }\r\n\r\n    render(){\r\n        let order = <p>noting</p>\r\n        if(this.props.process){\r\n                order = <Spinner />\r\n        }\r\n        else if(this.props.orders === null && !this.props.process){\r\n            order = <p>noting</p>\r\n        }else if(this.props.orders !== null && !this.props.process){\r\n            order = this.props.orders.map(p => {\r\n                return( <Orders \r\n                    key={Math.random()*10}\r\n                    bacon={p.order.bakon} \r\n                    chees={p.order.chees} \r\n                    meat={p.order.meat} \r\n                    salad={p.order.salad} \r\n                    fee={p.fee}/>)\r\n             })\r\n        }\r\n        return(\r\n            <div>\r\n                {order}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders : state.order.order,\r\n        token: state.auth.idtoken,\r\n        userid: state.auth.localID,\r\n        process : state.order.process\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return{\r\n        setOrder :  (token , userid) => dispatch(actionsType.initialOrder(token,userid))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchtoProps)(Order) ","import * as actions from './actions'\r\nimport axios from '../../hoc/axios/axios'\r\n\r\nexport const fetchStart = () => {\r\n    return{\r\n        type :actions.load_start\r\n    }\r\n}\r\n\r\nexport const setOrder = ( orders ) => {\r\n    return {\r\n        type: actions.load_done,\r\n        order: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderFailed = () => {\r\n    return {\r\n        type: actions.load_faild\r\n    };\r\n};\r\n\r\nexport const initialOrder = (token , userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchStart())\r\n        const url = '?auth=' + token + '&orderBy=\"userid\"&equalTo=\"' + userId + '\"'\r\n        axios.get( '/order.json' + url )\r\n            .then( response => {\r\n               dispatch(setOrder(response));\r\n            } )\r\n            .catch( () => {\r\n                dispatch(fetchOrderFailed());\r\n            } );\r\n    };\r\n};","import Input from '../../hoc/form/form'\r\nimport Btn from '../berger/bergerindex/factor/button/button'\r\nimport Spinerr from '../../hoc/spinner/spinner'\r\n\r\nimport React ,{Component } from 'react'\r\nimport {  withRouter} from 'react-router-dom'\r\nimport * as actions from '../../store/actions/authAction'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Authform extends Component {\r\n    state={customer:{\r\n        email:{\r\n            typeconfig:{\r\n                type:'email',\r\n                name:'email',\r\n                placeholder:'Enter Your Email',\r\n                value:''\r\n            },\r\n            inputtype:'input',\r\n        } ,\r\n        password:{\r\n            typeconfig:{\r\n                type:'password',\r\n                name:'password',\r\n                placeholder:'your password',\r\n                value:''\r\n            },\r\n            inputtype:'input',\r\n        }\r\n    }\r\n        \r\n    }\r\n\r\n    changedHandler=(event , id) => {\r\n        const handlerValue = {...this.state.customer}\r\n        const changedHandler = {...handlerValue[id]};\r\n        changedHandler.typeconfig.value = event.target.value;\r\n        handlerValue[id] = changedHandler;\r\n        this.setState({customer:handlerValue})\r\n     }\r\n\r\n     canclefactor = (event) => {\r\n         event.preventDefault()\r\n         this.props.change()\r\n     }\r\n\r\n     continueAuth = (event) => {\r\n        event.preventDefault()\r\n            this.props.AuthSignUp(\r\n                this.state.customer.email.typeconfig.value , \r\n                this.state.customer.password.typeconfig.value,\r\n                this.props.select);\r\n     }\r\n\r\n     jump = () => {\r\n         if(this.props.ing !== null ){\r\n            if( this.props.ing.salad === 0 \r\n                && this.props.ing.meat === 0\r\n                 && this.props.ing.chees === 0 \r\n                 && this.props.ing.bakon === 0){\r\n                this.props.history.push('/')\r\n            }else{\r\n                this.props.history.push('/factore')\r\n            }}else{\r\n            this.props.history.push('/')\r\n         }\r\n        \r\n     }\r\n\r\n    render(){\r\n        if(this.props.token !== null && !this.props.select){\r\n            this.jump()\r\n        }\r\n\r\n        const form = []\r\n        for(let item in this.state.customer){\r\n           form.push( {\r\n               id:item,\r\n               config : this.state.customer[item],\r\n           })\r\n       } \r\n\r\n       let error = null\r\n       if(this.props.err){\r\n           error = <p style={{color : 'black'}}>error!!</p>\r\n       }\r\n\r\n        return(\r\n            this.props.process ? <Spinerr /> :  <form action='false' className='dataform'>\r\n            {\r\n             form.map(p => {\r\n                 return(\r\n                     <Input \r\n                     key={p.id} \r\n                     inputtype={p.config.inputtype} \r\n                     config={p.config.typeconfig}\r\n                     chaned={(event) => this.changedHandler(event , p.id)}/>\r\n                 )})\r\n            }\r\n            {error}\r\n             <Btn \r\n             fnc={(event) => this.continueAuth(event)} \r\n             class='continueBtn'\r\n             value='done' />\r\n\r\n            <Btn \r\n                fnc={(event) => this.canclefactor(event)} \r\n                class='cancleBtn'\r\n                value={this.props.select ? 'change to Login' : 'change to Authintication'} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        process : state.auth.proces,\r\n        select : state.auth.select,\r\n        token : state.auth.idtoken,\r\n        err:state.auth.err,\r\n        ing : state.berger.ingredient\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        AuthSignUp : (email , password , signup) => dispatch(actions.auth(email , password ,signup)),\r\n        change : () => dispatch(actions.change())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Authform))","import * as actionsType from './actions'\r\nimport axios from 'axios'\r\n\r\nexport const authSeccess = (data) => {\r\n    return{\r\n        type:actionsType.Auth_succes,\r\n        email : data.email,\r\n        expiresIn : data.expiresIn,\r\n        idtoken : data.idToken,\r\n        localID : data.localId\r\n    }\r\n};\r\n\r\nexport const authFailed = () => {\r\n    return {\r\n        type : actionsType.Auth_fail,\r\n    }\r\n};\r\n\r\nexport const authStart = () => {\r\n    return{\r\n        type:actionsType.Auth_start, \r\n    }\r\n}\r\n\r\nexport const auth = (email,password,signup) => {\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        let data = {\r\n            email : email,\r\n            password : password,\r\n            returnSecureToken : true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBjJBBU6O6HqXeouVs4ISD3tdtymYbEGXQ' \r\n        if(!signup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBjJBBU6O6HqXeouVs4ISD3tdtymYbEGXQ' \r\n        }\r\n        axios.post(url, data)\r\n        .then( response => {\r\n            dispatch(authSeccess(response.data))\r\n        }\r\n        ).catch(errore => {\r\n            dispatch(authFailed())\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\nexport const change = () => {\r\n    return{\r\n        type:actionsType.Change_action\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return{\r\n        type:actionsType.Logout\r\n    }\r\n}\r\n\r\n\r\n//https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY] /sign in","import {connect} from 'react-redux'\r\nimport * as actions from '../../../store/actions/authAction'\r\nimport React, {Component } from 'react'\r\n\r\nclass Logout extends Component{\r\n    componentWillMount(){\r\n        this.props.logout()\r\n        \r\n    }\r\n\r\n    render(){\r\n        this.props.history.push('/')\r\n        return <p>logout ...</p>\r\n    }\r\n}\r\n\r\nconst mapDispatchToState = dispatch => {\r\n    return{\r\n        logout : () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToState)(Logout)","import React, { PureComponent } from 'react';\nimport  './App.css';\n\nimport Index from '../component/index/index'\nimport Bergur from '../component/berger/berger'\nimport ContaainerFactor from '../component/continueFactor/continueFactor'\n\nimport  { Route ,Switch} from 'react-router-dom'\nimport Order from '../component/order/order'\nimport Auth from '../component/auth/auth'\nimport Logout from '../component/auth/logout/logout'\n\n\nclass App extends PureComponent {\n \n     \n  render() {\n    return (\n      <Index>\n        <Switch>\n        <Route path='/' exact component={Bergur}/>\n        <Route path='/factore' component={ContaainerFactor}/>\n        <Route path='/orders' component={Order}/>\n        <Route path='/auth' component={Auth}/>\n        <Route path='/logout' component={Logout}/>\n        </Switch>\n        \n      </Index>\n    )\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionsType from '../actions/actions'\r\n\r\nconst initialState = {\r\n    ingredient:null,\r\n    fee:400\r\n}\r\n\r\nconst Fee = {\r\n    bakon:200,\r\n    salad:300,\r\n    chees:500,\r\n    meat:1000\r\n}\r\n\r\nconst bergerReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case actionsType.ADD_HANDLER:\r\n            return{\r\n                ...state,\r\n                ingredient:{\r\n                    ...state.ingredient,\r\n                    [action.name] : state.ingredient[action.name] + 1\r\n                },\r\n                fee: state.fee + Fee[action.name]\r\n            }\r\n        case actionsType.REMOVE_HANDLER:\r\n            return{\r\n                ...state,\r\n                ingredient:{\r\n                    ...state.ingredient,\r\n                    [action.name] : state.ingredient[action.name] - 1\r\n                },\r\n                fee: state.fee - Fee[action.name]\r\n            }\r\n        case actionsType.initialberger_done:\r\n                return { ...state,\r\n                    ingredient: {\r\n                        salad: action.ingredient.salad,\r\n                        bakon: action.ingredient.bakon,\r\n                        chees: action.ingredient.chees,\r\n                        meat: action.ingredient.meat\r\n                    },\r\n                    fee: 400,\r\n                    error: false\r\n                };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bergerReducer","import * as actionsType from '../actions/actions'\r\n\r\nconst initialState = {\r\n    order : [],\r\n    process :false\r\n}\r\n\r\nconst orderReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case actionsType.load_done:\r\n            const orders = []\r\n            for(let p in action.order.data){\r\n                orders.push(action.order.data[p])\r\n            }\r\n                return { ...state,\r\n                   order : orders,\r\n                   process:false\r\n                };\r\n        case actionsType.load_start:\r\n                return{\r\n                    ...state,\r\n                    order : [],\r\n                    process:true\r\n                }\r\n        case actionsType.load_faild:\r\n            return{\r\n                ...state,\r\n                process:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default orderReducer","import * as actions from '../actions/actions'\r\n\r\nconst initialstate = {\r\n    proces : false,\r\n    err : false,\r\n    select : false,\r\n    email : null,\r\n    expiresIn : null,\r\n    idtoken : null,\r\n    localID : null\r\n}\r\n\r\nconst Auth =(state = initialstate , action) => {\r\n    switch (action.type) {\r\n        case actions.Auth_start:\r\n           return{\r\n            ...state,\r\n            proces:true,\r\n            err : false ,\r\n            email : null,\r\n            expiresIn : null,\r\n            idtoken : null,\r\n            localID : null\r\n           }\r\n        case actions.Auth_fail:\r\n            return{\r\n                ...state,\r\n                proces : false,\r\n                err : true,\r\n                email : null,\r\n                expiresIn : null,\r\n                idtoken : null,\r\n                localID : null\r\n            }\r\n        case actions.Auth_succes:\r\n            return{\r\n                ...state,\r\n                proces : false,\r\n                err : false,\r\n                email : action.email,\r\n                expiresIn : action.expiresIn,\r\n                idtoken : action.idtoken,\r\n                localID : action.localID\r\n            }\r\n        case actions.Change_action:\r\n            console.log(state.select)\r\n            return{\r\n                ...state,\r\n                select : !state.select,\r\n                email : null,\r\n                expiresIn : null,\r\n                idtoken : null,\r\n                localID : null\r\n            }\r\n        case actions.Logout:\r\n            return{\r\n                ...state,\r\n                proces : false,\r\n                err : false,\r\n                select : false,\r\n                email : null,\r\n                expiresIn : null,\r\n                idtoken : null,\r\n                localID : null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Auth","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nimport {createStore , applyMiddleware ,compose , combineReducers} from 'redux'\nimport {Provider } from 'react-redux'\nimport bergerReducer from './store/reducer/bergerReducer'\nimport orderReducer from './store/reducer/orderReducer'\nimport thunk from 'redux-thunk'\nimport Auth from './store/reducer/authReducer'\n\nconst reducer = combineReducers({\n  berger : bergerReducer,\n  order : orderReducer,\n  auth : Auth\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer , composeEnhancers(applyMiddleware(thunk))) // applay asynchroun redux\n\nconst app = <Provider store={store}> \n<BrowserRouter><App/></BrowserRouter>\n</Provider>\n\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}